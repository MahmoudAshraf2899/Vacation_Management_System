// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Context_Layer.Models
{
    public partial class VacationManagementDBContext : DbContext
    {
        public VacationManagementDBContext()
        {
        }

        public VacationManagementDBContext(DbContextOptions<VacationManagementDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<EmpVacationCredit> EmpVacationCredits { get; set; }
        public virtual DbSet<EmpVacationsTransaction> EmpVacationsTransactions { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<VacationType> VacationTypes { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=192.168.1.6;Initial Catalog=VacationManagementDB;User ID=sa;Password=Nabwy12345");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EmpVacationCredit>(entity =>
            {
                entity.HasOne(d => d.Emp)
                    .WithMany(p => p.EmpVacationCredits)
                    .HasForeignKey(d => d.EmpId)
                    .HasConstraintName("FK_Emp_Vacation_Credit_Users");

                entity.HasOne(d => d.VacationType)
                    .WithMany(p => p.EmpVacationCredits)
                    .HasForeignKey(d => d.VacationTypeId)
                    .HasConstraintName("FK_Emp_Vacation_Credit_Vacation_Type");
            });

            modelBuilder.Entity<EmpVacationsTransaction>(entity =>
            {
                entity.HasOne(d => d.Emp)
                    .WithMany(p => p.EmpVacationsTransactions)
                    .HasForeignKey(d => d.EmpId)
                    .HasConstraintName("FK_Emp_Vacations_Transactions_Users");

                entity.HasOne(d => d.VacationType)
                    .WithMany(p => p.EmpVacationsTransactions)
                    .HasForeignKey(d => d.VacationTypeId)
                    .HasConstraintName("FK_Emp_Vacations_Transactions_Vacation_Type");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.HasOne(d => d.Department)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.DepartmentId)
                    .HasConstraintName("FK_Users_Departments");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}